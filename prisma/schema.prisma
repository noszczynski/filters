// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  parentId  Int?
  parent    Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToCategory")
  products  Product[]
  features  Feature[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id         Int                     @id @default(autoincrement())
  name       String
  price      Int // in cents, to avoid floating point errors
  image      String?
  categoryId Int?
  category   Category?               @relation(fields: [categoryId], references: [id])
  features   ProductFeatureVariant[]
  createdAt  DateTime                @default(now())
  updatedAt  DateTime                @updatedAt
}

model Feature {
  id         String           @id @default(uuid())
  name       String
  categoryId Int?
  category   Category?        @relation(fields: [categoryId], references: [id])
  variants   FeatureVariant[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

model FeatureVariant {
  id        String                  @id @default(uuid())
  name      String
  featureId String?
  feature   Feature?                @relation(fields: [featureId], references: [id])
  products  ProductFeatureVariant[]
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
}

model ProductFeatureVariant {
  id               String          @id @default(uuid())
  productId        Int?
  product          Product?        @relation(fields: [productId], references: [id])
  featureVariantId String?
  featureVariant   FeatureVariant? @relation(fields: [featureVariantId], references: [id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}
